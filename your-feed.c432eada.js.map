{"version":3,"sources":["pages/home/pages/your-feed/model/model.ts","pages/home/pages/your-feed/ui/pagination.tsx","pages/home/pages/your-feed/model/init.ts","pages/home/pages/your-feed/ui/your-feed.tsx","pages/home/pages/your-feed/index.ts"],"names":[],"mappings":"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","file":"your-feed.c432eada.js","sourceRoot":"../src","sourcesContent":["import { createEvent, createEffect, createStore, combine } from 'effector';\nimport { createGate } from 'effector-react';\nimport { status } from 'patronum/status';\nimport * as api from 'api';\nimport * as feed from 'features/feed';\nimport { limit } from 'library/limit';\nimport * as types from './types';\n\nexport { changeUrlFx } from 'features/feed';\n\nexport const PageGate = createGate();\nexport const toggleFavorite = createEvent<feed.types.Article>();\n\nexport const getFeedFx = createEffect(\n  ({ pageSize, page }: types.getFeedFxArgs) =>\n    api.get<feed.types.Feed>(`/articles/feed?${limit(pageSize, page)}`),\n);\n\nexport const {\n  currentPageSettled,\n  favoriteToggled,\n  setFavoriteArticleFx,\n  setUnfavoriteArticleFx,\n  $currentPage,\n  $feed,\n  $articles,\n  $totalPages,\n  $pageSize,\n} = feed.createFeedModel();\n\nexport const $status = status({ effect: getFeedFx });\nexport const $isFirstBoot = createStore<boolean>(true);\nexport const $isEmptyArticles = combine(\n  $status,\n  $articles,\n  (is, articles) => is === 'done' && articles.length === 0,\n);\n","import React from 'react';\nimport { useStore } from 'effector-react';\nimport { itemRender } from 'library/item-render';\nimport { Pagination as PaginationUI } from 'ui';\nimport { model } from '../model';\n\ntype Props = Readonly<{\n  path: string;\n}>;\n\nexport const Pagination: React.FC<Props> = ({ path }) => {\n  const total = useStore(model.$totalPages);\n  const current = useStore(model.$currentPage);\n  const pageSize = useStore(model.$pageSize);\n\n  return (\n    <PaginationUI\n      current={current}\n      itemRender={itemRender(path)}\n      pageSize={pageSize}\n      total={total}\n      onChange={model.currentPageSettled}\n    />\n  );\n};\n","import { forward, attach, sample } from 'effector';\nimport * as router from 'library/router';\nimport {\n  PageGate,\n  $isFirstBoot,\n  $feed,\n  $currentPage,\n  $pageSize,\n  currentPageSettled,\n  getFeedFx,\n  changeUrlFx,\n} from './model';\n\n$isFirstBoot.on(getFeedFx.done, () => false);\n\n$feed.on(getFeedFx.doneData, (_, payload) => payload);\n\nforward({\n  from: [PageGate.open, $currentPage],\n  to: attach({\n    source: {\n      pageSize: $pageSize,\n      page: $currentPage,\n    },\n    effect: getFeedFx,\n  }),\n});\n\nsample({\n  source: router.model.$pathname,\n  clock: currentPageSettled,\n  fn: (path, page) => ({ path, page }),\n  target: changeUrlFx,\n});\n","import React from 'react';\nimport { RouteConfigComponentProps } from 'react-router-config';\nimport { useGate, useList, useStore } from 'effector-react';\nimport { ArticlePreview, List, Spinner, EmptyArticles } from 'ui';\nimport { model } from '../model';\nimport { Pagination } from './pagination';\n\nimport '../model/init';\n\ntype Props = Readonly<RouteConfigComponentProps>;\n\nexport const YourFeedPage: React.FC<Props> = ({ match: { path } }) => {\n  useGate(model.PageGate);\n  const loading = useStore(model.$isFirstBoot);\n  const isEmpty = useStore(model.$isEmptyArticles);\n\n  return (\n    <>\n      {isEmpty && <EmptyArticles />}\n      <List>\n        {useList(model.$articles, (article) => (\n          <li>\n            <ArticlePreview\n              {...article}\n              onClick={() => model.favoriteToggled(article)}\n            />\n          </li>\n        ))}\n      </List>\n      <Pagination path={path} />\n      <Spinner loading={loading} />\n    </>\n  );\n};\n","export { YourFeedPage } from './ui/your-feed';\n"]}