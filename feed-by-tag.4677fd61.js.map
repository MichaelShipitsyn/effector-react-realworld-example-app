{"version":3,"sources":["pages/home/pages/feed-by-tag/model/model.ts","pages/home/pages/feed-by-tag/ui/pagination.tsx","pages/home/pages/feed-by-tag/model/init.ts","pages/home/pages/feed-by-tag/ui/feed-by-tag.tsx","pages/home/pages/feed-by-tag/index.ts"],"names":[],"mappings":"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","file":"feed-by-tag.4677fd61.js","sourceRoot":"../src","sourcesContent":["import { createEffect, createStore, combine } from 'effector';\nimport { createGate } from 'effector-react';\nimport { status } from 'patronum/status';\nimport * as api from 'api';\nimport * as feed from 'features/feed';\nimport { limit } from 'library/limit';\nimport * as router from 'library/router';\nimport * as types from './types';\n\nexport const PageGate = createGate();\nexport const {\n  currentPageSettled,\n  favoriteToggled,\n  $currentTag,\n  $currentPage,\n  $pageSize,\n  setFavoriteArticleFx,\n  setUnfavoriteArticleFx,\n} = feed.createFeedModel();\n\nexport const getFeedFx = createEffect(({ tag, page }: types.GetFeedByTagArgs) =>\n  api.get<feed.types.Feed>(\n    `/articles?tag=${encodeURIComponent(tag)}&${limit(10, page)}`,\n  ),\n);\n\nexport const changeUrlFx = createEffect(\n  ({ path, tag, page }: types.ChangeUrlFxArgs) => {\n    router.model.history.replace(`${path}?tag=${tag}&page=${page}`);\n  },\n);\n\nexport const $status = status({ effect: getFeedFx });\nexport const $feed = createStore<types.FeedByTag>({});\nexport const $feedByTag = combine(\n  $feed,\n  $currentTag,\n  (feedStore, tag) =>\n    feedStore[tag] ?? {\n      articles: [],\n      articlesCount: 0,\n    },\n);\n\nexport const $noCurrentTag = combine(\n  $currentTag,\n  $feed,\n  (tag, feedStore) => !feedStore[tag],\n);\n\nexport const $articles = $feedByTag.map((x) => x.articles);\nexport const $totalPages = $feedByTag.map((x) => x.articlesCount);\n\nexport const $isEmptyArticles = combine(\n  $status,\n  $articles,\n  (is, articles) => is === 'done' && articles.length === 0,\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useStore } from 'effector-react';\nimport { PaginationProps } from 'rc-pagination';\nimport { Pagination as PaginationUI } from 'ui';\nimport { model } from '../model';\n\ntype ItemRender = (x: {\n  path: string;\n  tag: string;\n}) => PaginationProps['itemRender'];\n\nexport const itemRender: ItemRender = ({ path, tag }) => (\n  current,\n  type,\n  element,\n) =>\n  type !== 'page' ? (\n    element\n  ) : (\n    <Link className=\"link\" to={`${path}?tag=${tag}&page=${current}`}>\n      {current}\n    </Link>\n  );\n\ntype Props = Readonly<{\n  path: string;\n}>;\n\nexport const Pagination: React.FC<Props> = ({ path }) => {\n  const total = useStore(model.$totalPages);\n  const tag = useStore(model.$currentTag);\n  const current = useStore(model.$currentPage);\n  const pageSize = useStore(model.$pageSize);\n\n  return (\n    <PaginationUI\n      current={current}\n      itemRender={itemRender({ path, tag })}\n      pageSize={pageSize}\n      total={total}\n      onChange={model.currentPageSettled}\n    />\n  );\n};\n","import { forward, attach, sample } from 'effector';\nimport * as router from 'library/router';\nimport {\n  PageGate,\n  $feed,\n  $feedByTag,\n  $currentTag,\n  $currentPage,\n  $pageSize,\n  getFeedFx,\n  currentPageSettled,\n  setFavoriteArticleFx,\n  setUnfavoriteArticleFx,\n  changeUrlFx,\n} from './model';\n\nforward({\n  from: [PageGate.open, router.model.$search],\n  to: attach({\n    source: {\n      tag: $currentTag,\n      page: $currentPage,\n      pageSize: $pageSize,\n    },\n    effect: getFeedFx,\n  }),\n});\n\n$feed.on(getFeedFx.done, (state, { params, result }) => ({\n  ...state,\n  [params.tag]: result,\n}));\n\n$feedByTag.on(\n  [setFavoriteArticleFx.done, setUnfavoriteArticleFx.done],\n  (state, { params, result }) => ({\n    ...state,\n    articles: state.articles.map((article) =>\n      article.slug !== params\n        ? article\n        : {\n            ...article,\n            favorited: result.article.favorited,\n            favoritesCount: result.article.favoritesCount,\n          },\n    ),\n  }),\n);\n\nsample({\n  source: {\n    path: router.model.$pathname,\n    tag: $currentTag,\n  },\n  clock: currentPageSettled,\n  fn: ({ path, tag }, page) => ({ path, tag, page }),\n  target: changeUrlFx,\n});\n","import React from 'react';\nimport { RouteConfigComponentProps } from 'react-router-config';\nimport { useGate, useList, useStore } from 'effector-react';\nimport { ArticlePreview, List, Spinner, EmptyArticles } from 'ui';\nimport { model } from '../model';\nimport { Pagination } from './pagination';\n\nimport '../model/init';\n\ntype Props = Readonly<RouteConfigComponentProps>;\n\nexport const FeedByTagPage: React.FC<Props> = ({ match: { path } }) => {\n  useGate(model.PageGate);\n  const noCurrentTag = useStore(model.$noCurrentTag);\n  const isEmpty = useStore(model.$isEmptyArticles);\n\n  return (\n    <>\n      {isEmpty && <EmptyArticles />}\n      <List>\n        {useList(model.$articles, (article) => (\n          <li>\n            <ArticlePreview\n              {...article}\n              onClick={() => model.favoriteToggled(article)}\n            />\n          </li>\n        ))}\n      </List>\n      <Pagination path={path} />\n      <Spinner loading={noCurrentTag} />\n    </>\n  );\n};\n","export { FeedByTagPage } from './ui/feed-by-tag';\n"]}