{"version":3,"sources":["pages/editor/add-tag/model.ts","pages/editor/add-tag/init.ts","pages/editor/add-tag/add-tag.tsx","pages/editor/add-tag/index.ts","pages/editor/model/model.ts","pages/editor/ui/input-field.tsx","pages/editor/ui/text-field.tsx","library/uniq.ts","pages/editor/model/init.ts","pages/editor/ui/form.tsx","pages/editor/ui/submit-button.tsx","pages/editor/ui/tag/index.tsx","pages/editor/ui/tag-list.tsx","pages/editor/ui/editor.tsx","pages/editor/index.ts"],"names":[],"mappings":"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","file":"editor.e0ae4cdf.js","sourceRoot":"../src","sourcesContent":["import { createEvent, createStore } from 'effector';\nimport { isASCII } from 'library/ascii';\nimport { createFormEvents } from 'library/form';\n\nexport const { textChanged, handleTextChanged } = createFormEvents();\nexport const tagAdded = createEvent<string>();\nexport const keyPressed = createEvent<React.KeyboardEvent>();\n\nexport const validTagAdded = tagAdded.filter({\n  fn: (x) => Boolean(x.length) && isASCII(x),\n});\n\nexport const $currentTag = createStore<string>('');\n","import { sample, guard } from 'effector';\nimport { $currentTag, keyPressed, tagAdded, textChanged } from './model';\n\n$currentTag.on(textChanged, (_, payload) => payload).reset(tagAdded);\n\nsample({\n  source: $currentTag,\n  clock: guard(keyPressed, { filter: (e) => e.key === 'Enter' }),\n  target: tagAdded,\n});\n","import React from 'react';\nimport { useStore } from 'effector-react';\nimport { Form, Input } from 'ui';\nimport * as model from './model';\n\nimport './init';\n\nexport const AddTag: React.FC = () => {\n  const tag = useStore(model.$currentTag);\n\n  return (\n    <Form onSubmit={(e) => e.preventDefault()}>\n      <Input\n        autoComplete=\"off\"\n        name=\"tagList\"\n        placeholder=\"Enter tags\"\n        value={tag}\n        onChange={model.handleTextChanged}\n        onKeyDown={model.keyPressed}\n      />\n    </Form>\n  );\n};\n","export * as model from './model';\nexport { AddTag } from './add-tag';\n","import { createEvent, createEffect, createStore } from 'effector';\nimport * as api from 'api';\nimport * as feed from 'features/feed';\nimport { createFormEvents } from 'library/form';\nimport * as types from './types';\n\nexport const {\n  fieldChanged,\n  handleFieldChanged,\n  formSubmitted,\n} = createFormEvents();\nexport const tagDeleted = createEvent<string>();\n\nexport const createArticleFx = createEffect<\n  types.Form,\n  feed.types.Article,\n  types.ErrorType\n>({\n  handler: (article) =>\n    api\n      .post<types.CreateArticleFxDone>('/articles', { article })\n      .then((x) => x.article),\n});\n\nexport const $form = createStore<types.Form>({\n  articleSlug: '',\n  title: '',\n  description: '',\n  body: '',\n  tagList: [],\n});\n\nexport const $tags = $form.map((x) => x.tagList);\nexport const $errors = createStore<types.ErrorType>({\n  errors: [],\n});\n","import React from 'react';\nimport { useFormField } from 'library/form';\nimport { FormGroup, Input, InputProps } from 'ui';\nimport { model } from '../model';\n\ntype Props = InputProps & { name: string };\n\nexport const InputField: React.FC<Props> = ({ name, ...props }) => {\n  const value = useFormField({\n    store: model.$form,\n    name,\n  });\n\n  return (\n    <FormGroup>\n      <Input name={name} value={value} {...props} />\n    </FormGroup>\n  );\n};\n","import React from 'react';\nimport { useFormField } from 'library/form';\nimport { FormGroup, Textarea, TextareaProps } from 'ui';\nimport { model } from '../model';\n\ntype Props = TextareaProps & { name: string };\n\nexport const TextField: React.FC<Props> = ({ name, ...props }) => {\n  const value = useFormField({\n    store: model.$form,\n    name,\n  });\n\n  return (\n    <FormGroup>\n      <Textarea name={name} value={value} {...props} />\n    </FormGroup>\n  );\n};\n","export const uniq = <T>(x: T[]): T[] => Array.from(new Set(x));\n","import { sample } from 'effector';\nimport * as router from 'library/router';\nimport { uniq } from 'library/uniq';\nimport { model } from '../add-tag';\nimport {\n  $form,\n  $errors,\n  fieldChanged,\n  tagDeleted,\n  formSubmitted,\n  createArticleFx,\n} from './model';\n\n$form\n  .on(fieldChanged, (state, payload) => ({\n    ...state,\n    ...payload,\n  }))\n  .on(model.validTagAdded, (state, payload) => ({\n    ...state,\n    tagList: uniq<string>([...state.tagList, payload]),\n  }))\n  .on(tagDeleted, (state, payload) => ({\n    ...state,\n    tagList: state.tagList.filter((tag) => tag !== payload),\n  }))\n  .reset(createArticleFx.done);\n\nsample({\n  source: $form,\n  clock: formSubmitted,\n  target: createArticleFx,\n});\n\ncreateArticleFx.doneData.watch(({ slug }) => {\n  router.model.history.replace(`/article/${slug}`);\n});\n\n$errors\n  .on(createArticleFx.failData, (_, payload) => payload)\n  .reset(fieldChanged);\n","import React from 'react';\nimport { Form as UIForm } from 'ui';\nimport { model } from '../model';\nimport { InputField } from './input-field';\nimport { TextField } from './text-field';\n\nimport '../model/init';\n\nexport const Form: React.FC = () => (\n  <UIForm id=\"editor\" onSubmit={(e) => e.preventDefault()}>\n    <InputField\n      className=\"form-control-lg\"\n      name=\"title\"\n      placeholder=\"Article Title\"\n      onChange={model.handleFieldChanged}\n    />\n\n    <InputField\n      name=\"description\"\n      placeholder=\"What's this article about?\"\n      onChange={model.handleFieldChanged}\n    />\n\n    <TextField\n      name=\"body\"\n      placeholder=\"Write your article (in markdown)\"\n      rows={8}\n      onChange={model.handleFieldChanged}\n    />\n  </UIForm>\n);\n","import React from 'react';\nimport { useStore } from 'effector-react';\nimport { Button } from 'ui';\nimport { model } from '../model';\n\nexport const SubmitButton: React.FC = () => {\n  const disabled = useStore(model.createArticleFx.pending);\n\n  return (\n    <Button\n      className=\"btn-lg pull-xs-right btn-primary\"\n      disabled={disabled}\n      form=\"editor\"\n      type=\"submit\"\n      onClick={model.formSubmitted}>\n      Publish article\n    </Button>\n  );\n};\n","import React from 'react';\nimport { Button, ButtonProps } from 'ui';\nimport './index.css';\n\ntype Props = Readonly<{\n  onClick: ButtonProps['onClick'];\n}>;\n\nexport const Tag: React.FC<Props> = ({ children, onClick }) => (\n  <span className=\"tag-default tag-pill\">\n    {children}\n    <Button className=\"btn-sm editor-tag\" onClick={onClick}>\n      <i className=\"ion-close-round\" />\n    </Button>\n  </span>\n);\n","import React from 'react';\nimport { useList } from 'effector-react';\nimport { TagList as List } from 'ui';\nimport { model } from '../model';\nimport { Tag } from './tag';\n\nexport const TagList: React.FC = () => (\n  <List>\n    {useList(model.$tags, (tag) => (\n      <Tag onClick={() => model.tagDeleted(tag)}>{tag}</Tag>\n    ))}\n  </List>\n);\n","import React from 'react';\nimport { Page, Row } from 'ui';\nimport { AddTag } from '../add-tag';\nimport { Form } from './form';\nimport { SubmitButton } from './submit-button';\nimport { TagList } from './tag-list';\n\nimport '../model/init';\n\nexport const EditorPage: React.FC = () => (\n  <Page>\n    <Row>\n      <div className=\"col-md-10 offset-md-1 col-xs-12\">\n        <Form />\n        <AddTag />\n        <TagList />\n        <SubmitButton />\n      </div>\n    </Row>\n  </Page>\n);\n","export { EditorPage } from './ui/editor';\n"]}