{"version":3,"sources":["pages/settings/model/model.ts","pages/settings/ui/errors.tsx","pages/settings/ui/input-field.tsx","pages/settings/ui/submit-button.tsx","pages/settings/ui/text-field.tsx","pages/settings/ui/form.tsx","pages/settings/model/init.ts","pages/settings/ui/settings.tsx","pages/settings/index.ts"],"names":[],"mappings":"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","file":"settings.cd6d5d4b.js","sourceRoot":"../src","sourcesContent":["import { createEffect, createStore } from 'effector';\nimport * as api from 'api';\nimport * as authUser from 'features/user';\nimport { createFormEvents } from 'library/form';\nimport * as types from './types';\n\nexport const {\n  fieldChanged,\n  handleFieldChanged,\n  formSubmitted,\n} = createFormEvents();\n\nexport const changeUserDataFx = createEffect<\n  authUser.types.User,\n  void,\n  types.ErrorType\n>({\n  handler: (user) => api.put('/user', { user }),\n});\n\nexport const $errors = createStore<types.ErrorType>({\n  errors: [],\n});\n","import React from 'react';\nimport { useStore } from 'effector-react';\nimport { ErrorList } from 'ui';\nimport { model } from '../model';\n\nexport const Errors: React.FC = () => {\n  const errors = useStore(model.$errors);\n\n  return <ErrorList errors={errors} />;\n};\n","import React from 'react';\nimport { StoreValue } from 'effector';\nimport { useStoreMap } from 'effector-react';\nimport * as authUser from 'features/user';\nimport { FormGroup, Input, InputProps } from 'ui';\n\nexport const InputField: React.FC<InputProps> = ({ name, ...props }) => {\n  const value = useStoreMap({\n    store: authUser.model.$user,\n    keys: [name],\n    fn: (user, [key]) =>\n      user[key as keyof StoreValue<typeof authUser.model.$user>] ?? '',\n  });\n\n  return (\n    <FormGroup>\n      <Input name={name} value={value} {...props} />\n    </FormGroup>\n  );\n};\n","import React from 'react';\nimport { useStore } from 'effector-react';\nimport { Button } from 'ui';\nimport { model } from '../model';\n\nexport const SubmitButton: React.FC = () => {\n  const disabled = useStore(model.changeUserDataFx.pending);\n\n  return (\n    <Button\n      className=\"btn-lg btn-primary pull-xs-right\"\n      disabled={disabled}\n      type=\"submit\">\n      Update Settings\n    </Button>\n  );\n};\n","import React from 'react';\nimport { StoreValue } from 'effector';\nimport { useStoreMap } from 'effector-react';\nimport * as authUser from 'features/user';\nimport { FormGroup, Textarea, TextareaProps } from 'ui';\n\nexport const TextField: React.FC<TextareaProps> = ({ name, ...props }) => {\n  const value = useStoreMap({\n    store: authUser.model.$user,\n    keys: [name],\n    fn: (user, [key]) =>\n      user[key as keyof StoreValue<typeof authUser.model.$user>] ?? '',\n  });\n\n  return (\n    <FormGroup>\n      <Textarea name={name} value={value} {...props} />\n    </FormGroup>\n  );\n};\n","import React from 'react';\nimport { Form as UIForm } from 'ui';\nimport { model } from '../model';\nimport { InputField } from './input-field';\nimport { SubmitButton } from './submit-button';\nimport { TextField } from './text-field';\n\nexport const Form: React.FC = () => (\n  <UIForm onSubmit={model.formSubmitted}>\n    <InputField name=\"image\" onChange={model.handleFieldChanged} />\n    <InputField\n      className=\"form-control-lg\"\n      name=\"username\"\n      onChange={model.handleFieldChanged}\n    />\n    <TextField\n      className=\"form-control-lg\"\n      name=\"bio\"\n      onChange={model.handleFieldChanged}\n    />\n\n    <InputField\n      className=\"form-control-lg\"\n      name=\"email\"\n      onChange={model.handleFieldChanged}\n    />\n    <InputField\n      className=\"form-control-lg\"\n      name=\"password\"\n      onChange={model.handleFieldChanged}\n    />\n\n    <SubmitButton />\n  </UIForm>\n);\n","import { sample } from 'effector';\nimport { model } from 'features/user';\nimport * as router from 'library/router';\nimport {\n  $errors,\n  formSubmitted,\n  fieldChanged,\n  changeUserDataFx,\n} from './model';\n\nmodel.$user.on(fieldChanged, (state, payload) => ({\n  ...state,\n  ...payload,\n}));\n\nsample({\n  source: model.$user,\n  clock: formSubmitted,\n  target: changeUserDataFx,\n});\n\nchangeUserDataFx.done.watch(() => {\n  window.location.reload();\n});\n\nmodel.loggedOutClicked.watch(() => {\n  router.model.history.push('/');\n});\n\n$errors\n  .on(changeUserDataFx.failData, (_, payload) => payload)\n  .reset(fieldChanged);\n","import React from 'react';\nimport { model } from 'features/user';\nimport { Page, Row, Button } from 'ui';\nimport { Errors } from './errors';\nimport { Form } from './form';\n\nimport '../model/init';\n\nexport const SettingsPage: React.FC = () => (\n  <Page>\n    <Row>\n      <div className=\"col-md-6 offset-md-3 col-xs-12\">\n        <h1 className=\"text-xs-center\">Your Settings</h1>\n        <Errors />\n        <Form />\n        <hr />\n\n        <Button className=\"btn-outline-danger\" onClick={model.loggedOutClicked}>\n          Or click here to logout.\n        </Button>\n      </div>\n    </Row>\n  </Page>\n);\n","export { SettingsPage } from './ui/settings';\n"]}